{"componentChunkName":"component---src-pages-posts-js","path":"/services/first","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"html":"<h2>Perquisites</h2>\n<ol>\n<li>We will need to install a plugin from the gatsby source to access the file system </li>\n</ol>\n<pre><code>yarn add gatsby-source-filesystem\n</code></pre>\n<p>And we will add the installed plugin to the <code>gatsby-config.js</code> file.</p>\n<pre><code>{\n    resolve:'gatsby-source-filesystem',\n    options:{\n        path:`${__dirname}/src/markdown`,\n        name:'pages'\n    }\n}\n</code></pre>\n<ol start=\"2\">\n<li>We need a transformer plugin which will make our files queryable from graphql. </li>\n</ol>\n<pre><code>yarn add gatsby-transformer-remark\n</code></pre>\n<p>and import the plugin to the <code>gatsby-config.js</code> file.</p>\n<ol start=\"3\">\n<li>Add the folder we configured in step 1 where all the markdown files will exist and create the first <em>markdown</em> file <code>first.md</code></li>\n</ol>\n<p>At the top of this file we can add properties which will not be a part of the markdown content but actually accessible from javascript by adding them between three dashes and after that add the markdown so the file will look something like:</p>\n<pre><code class=\"language-md\">---\ntitle: First Post\n---\n\n## Hello World!\n</code></pre>\n<ol start=\"4\">\n<li>We can now create a javascript file that will render these markdowns.</li>\n</ol>","frontmatter":{"title":"How to create a Gatsby Blog"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"fileName":"first"}}}